name: Release & Publish

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: [master]

jobs:
  release-and-publish:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write   # to create releases
      id-token: write   # for trusted publishing
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      
      - name: Check version change
        id: check_version
        run: |
          # Get current version
          CURRENT_VERSION=$(grep -m1 'version = ' pyproject.toml | cut -d'"' -f2)
          echo "Current version: $CURRENT_VERSION"
          
          # Get previous version
          git checkout HEAD^1
          PREVIOUS_VERSION=$(grep -m1 'version = ' pyproject.toml | cut -d'"' -f2)
          echo "Previous version: $PREVIOUS_VERSION"
          git checkout -
          
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "Version unchanged"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Create GitHub Release
        if: steps.check_version.outputs.changed == 'true'
        uses: softprops/action-gh-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.check_version.outputs.version }}
          name: Release v${{ steps.check_version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Publish to PyPI
        if: steps.check_version.outputs.changed == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          package_name: repo2string
          # The action automatically does a build and upload if you don't override.
        env:
          # For Trusted Publishing
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}  # if you still do password-based 