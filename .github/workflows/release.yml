name: Auto Release

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches: [ master ]

jobs:
  check-and-release:
    # Only run if CI workflow succeeded
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write  # for creating release
      actions: write   # for triggering publish workflow
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2  # To be able to get the previous commit
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      
      - name: Check version change
        id: check_version
        run: |
          # Get current version
          CURRENT_VERSION=$(grep -m1 'version = ' pyproject.toml | cut -d'"' -f2)
          echo "Current version: $CURRENT_VERSION"
          
          # Get previous version
          git checkout HEAD^1
          PREVIOUS_VERSION=$(grep -m1 'version = ' pyproject.toml | cut -d'"' -f2)
          echo "Previous version: $PREVIOUS_VERSION"
          git checkout -
          
          # Compare versions
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "Version unchanged"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Release
        if: steps.check_version.outputs.changed == 'true'
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.check_version.outputs.version }}
          name: Release v${{ steps.check_version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true 