[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "repo2string"
version = "0.4.0"
description = "Copy any repository into the clipboard. And get the token count."
readme = "readme.md"
requires-python = ">=3.8"
authors = [
  { name="Maciej Szulc", email="szulcmaciej1@gmail.com" },
]
license = { text = "MIT" }
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Text Processing :: General"
]
keywords = ["llm", "chatgpt", "repository", "context", "tokens", "clipboard"]
dependencies = [
  "pyperclip",
  "pathspec",
  "tiktoken",
  "Flask"
]

[project.urls]
"Homepage" = "https://github.com/szulcmaciej/repo2string"
"Bug Tracker" = "https://github.com/szulcmaciej/repo2string/issues"

# This makes a console script entry point named `repo2string`
[project.scripts]
repo2string = "repo2string.cli:main"
r2s = "repo2string.cli:main"

[tool.setuptools.package-data]
repo2string = ["ui.html"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=repo2string --cov-report=term-missing --no-cov-on-fail"

[project.optional-dependencies]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "ruff>=0.1.0",
    "pre-commit>=3.5.0,<4.0.0"
]

[tool.ruff]
target-version = "py38"
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
]